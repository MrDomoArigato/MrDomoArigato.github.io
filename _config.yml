# Welcome to Jekyll!
#
# This config file is meant for settings that affect your whole blog, values
# which you are expected to set up once and rarely edit after that. If you find
# yourself editing this file very often, consider using Jekyll's data files
# feature for the data you need to update frequently.
#
# For technical reasons, this file is *NOT* reloaded automatically when you use
# 'bundle exec jekyll serve'. If you change this file, please restart the server process.
#
# If you need help with YAML syntax, here are some quick references for you:
# https://learn-the-web.algonquindesign.ca/topics/markdown-yaml-cheat-sheet/#yaml
# https://learnxinyminutes.com/docs/yaml/
#
# Site settings
# These are used to personalize your new site. If you look in the HTML files,
# you will see them accessed via {{ site.title }}, {{ site.email }}, and so on.
# You can create any custom variable you would like, and they will be accessible
# in the templates via {{ site.myvariable }}.

title: Neko Lueke

description: >- # this means to ignore newlines until "baseurl:"
  CV Portfolio
baseurl: "" # the subpath of your site, e.g. /blog
url: "" # the base hostname & protocol for your site, e.g. http://example.com

name: Neko Lueke
jobtitle: Full-Stack Developer

contacts:
  email: ynlueke@gmail.com
  phone: "+1 816-825-0352"
  address: "3600 Broadway Blvd, Kansas City, MO 64111"

  resume: Resume.pdf

  linkedin: "https://linkedin.com"
  instagram: "https://instagram.com"
  facebook: "https://instagram.com"
  twitter: "https://instagram.com"

format:
  skill_list: "column-3"

home:
  photo: mountains.png
  title: Summary
  # subtitle: Seacret to life
  text: |-2
    &emsp;Having worked professionally in various areas of the technology industry since 2018, I am confident in my ability to fill any position and quickly adapt to any required tasks or responsibilities.

    &emsp;I am currently seeking a position as a software engineer. My development experience primarily stems from my internship at Cerner, where I wrote most of my code in Java using the Jax-RS framework to build RESTful web services. I also worked on front-end projects utilizing React and Ruby on Rails.

    &emsp;In addition to my professional experience, I have completed several school and personal projects, which are listed by level of complexity. My largest project is a bookkeeper application featuring a React UI and a .NET API, secured with SSO that I hosted and set up. A network diagram of this project is available on its GitHub page.

education:
  - name: University of Missouri-Kansas City
    location: Kansas City, Missouri
    degree: Bachelors of Science in Computer Science
    timeframe: "Spring 2024"
  - name: Metropolitan Community College-Longview
    location: Lees Summit, Missouri
    degree: Associates in Computer Science
    timeframe: "Spring 2021" 
experience:
  - company: JCPenney
    location: Lenexa, Kansas
    title: IT Technician
    timeframe: August, 2021 - Present
    text:
      - Demonstrates in depth knowledge of multiples technologies including Microsoft Enterprise, Office 365, and Cisco Meraki
      - Debugs, fixes, and maintains technical parts of company industrial sorting equipment, including multiple SDI & a Dematic Sorting System
      - Trained in essential infrastructure and networking, including switch installation & RJ-45 terminations
  - company: Code Ninjas
    location: Leawood, Kansas
    title: Tutor
    timeframe: September, 2019 - August, 2021
    text:
      - Instructed 7 to 14 year old students to program using different languages and software
      - Communicated the same concept in different ways to increase retention and recollection
      - Created hour to week long lesson plans that kept students involved and excited
  - company: Cerner
    location: Kansas City, Missouri
    title: Technical Intern
    timeframe: January, 2018 - May, 2019
    text:
      - Worked as a backend programmer, developing Rest-API endpoints for production level environments
      - Used Jax-RS package in Java for endpoint development
      - Designed load tests for different endpoints to determine the APIâ€™s overall efficiency
      - Honed my knowledge in web app development and standards

skills:
  - title: Skillset
    skill_list:
    - Detail Oriented
    - Decisive
    - Problem Solver
    - Efficient
    - Adaptable
  - title: Languages
    skill_list:
    - Java
    - Ruby on Rails
    - React
    - HTML
    - SQL
    - Javascript
projects:
  - name: Bookkeeper Application
    role: Team Lead
    links:
    - name: Frontend Github
      link: https://github.com/MrDomoArigato/Capstone-Frontend
    - name: Backend Github
      link: https://github.com/MrDomoArigato/Capstone-Backend
    - name: Hosted Application
      link: https://capstone.ynlueke.com
    text: |-2
      &emsp;The Application was developed as part of the capstone course for my degree program. Developed by a team of four, this project provides users with a comprehensive tool to manage and track their personal finances. Utilizing modern technologies, the application integrates a responsive React frontend with a robust .NET backend, a PostgreSQL database, and secure OAuth2 login for authentication. This project showcases our ability to work collaboratively on a full-stack web application, integrating multiple technologies to deliver a secure, user-friendly platform for personal budget management.

      Technology Stack
      &emsp;- Frontend: React, CSS (Bootstrap), JavaScript
      &emsp;- Backend: .NET Core (C#)
      &emsp;- Database: PostgreSQL
      &emsp;- Authentication: OAuth2
      &emsp;- Testing Framework: xUnit, React Testing

      The Projects core requirements were it must 
      &emsp;- Be a full-stack application (Cannot use CMS, like Wordpress)
      &emsp;- Include a financial component
      &emsp;- Have the following pages: Login, Register, Home/Dashboard, User Profile/Settings, Plus 2 Additional Pages
      &emsp;- Have at least 1 CSS Framework
      &emsp;- Complete at least 2 stretch goals

      Project Stretch Goals
      &emsp;- Deploy project to server/cloud instance (Completed)
      &emsp;- Create Web API layer for backend interactions (Completed)
      &emsp;- Use open-source reporting tool/business intelligence suite for all the reporting and its data visualization (Patially Completed)
      &emsp;- Use pull requests/code review approved by a group member (Completed)
      &emsp;- Sessions for remembering user if they close their browser and login again (Completed)
      &emsp;- Options for user if they forgot their username or password (Completed)
      &emsp;- Security scan application & fix critical issues (Not Completed)
      &emsp;- Do accessibility audit and fix errors (Not Completed)

exclude:
 # from https://github.com/jekyll/jekyll/blob/master/lib/site_template/_config.yml:
   - .sass-cache/
   - .jekyll-cache/
   - gemfiles/
   - Gemfile
   - Gemfile.lock
   - node_modules/
   - vendor/bundle/
   - vendor/cache/
   - vendor/gems/
   - vendor/ruby/

last_edit_timestamp: true # show or hide edit time - page must have `last_modified_date` defined in the frontmatter
last_edit_time_format: "%b %e %Y at %I:%M %p" # uses ruby's time format: https://ruby-doc.org/stdlib-2.7.0/libdoc/time/rdoc/Time.html

# Default build setting; Not needed
# Build settings
# theme: minima
# plugins:
#   - jekyll-feed

# Footer last edited timestamp


# Exclude from processing.
# The following items will not be processed, by default.
# Any item listed under the `exclude:` key here will be automatically added to
# the internal "default list".
#
# Excluded items can be processed by explicitly listing the directories or
# their entries' file path in the `include:` list.
#
